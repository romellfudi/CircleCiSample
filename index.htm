<!DOCTYPE html>
<!-- saved from url=(0092)#1 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="viewport" content="width=device-width, minimum-scale=1.0, initial-scale=1.0, user-scalable=yes">
  <meta name="theme-color" content="#4F7DC9">
  <link rel="shortcut icon" href="https://raw.githubusercontent.com/romellfudi/assets/master/favicon.ico" />  
  <title>CircleCi on Github</title>
  <link rel="stylesheet" href="./index_files/css">
  <link rel="stylesheet" href="./index_files/icon">
  <link rel="stylesheet" href="./index_files/codelab-elements.css">
  <style>
    .success {
      color: #1e8e3e;
    }
    .error {
      color: red;
    }
  </style>
</head>
<body class="vsc-initialized">
  <google-codelab id="https://github.com/romellfudi/CircleCiSample" environment="web" feedback-link="https://github.com/romellfudi/CircleCiSample/issues" selected="0" google-codelab-ready="" codelab-title="CircleCi on Github"><div id="drawer"><div class="codelab-time-container" style="display: none;"></div><div class="steps"><ol><li completed=""><a href="#0"><span class="step"><span>Introduction</span></span></a></li><li completed="" selected=""><a href="#1"><span class="step"><span>Basic Module</span></span></a></li><li><a href="#2"><span class="step"><span>Intermediate Module</span></span></a></li><li><a href="#3"><span class="step"><span>Advance Module</span></span></a></li><li><a href="#4"><span class="step"><span>License</span></span></a></li></ol></div><div class="metadata"><a target="_blank" href="https://github.com/romellfudi/CircleCiSample/issues"><i class="material-icons">bug_report</i> Report a mistake</a></div></div><div id="codelab-title"><div id="codelab-nav-buttons"><a href="https://codelabs-preview.appspot.com/" id="arrow-back"><i class="material-icons">close</i></a><a href="#" id="menu"><i class="material-icons">menu</i></a></div><h1 class="title">CircleCi on Github</h1><div class="codelab-time-container" style="display: none;"></div><devsite-user></devsite-user></div><div id="main"><div id="steps"><google-codelab-step label="Introduction" duration="1" step="1"><h2 is-upgraded="" class="step-title">1. Introduction</h2>
        <p>Use CircleCi Service, please create account and register on <a href="https://circleci.com/" target="_blank">CircleCi</a>:</p>
<p class="image-container"><img style="width: 200.00px" src="./index_files/circleci.png"></p>


      </div></div></google-codelab-step><google-codelab-step label="Basic Module" duration="5" step="2" ><h2 is-upgraded="" class="step-title">2. Basic Module</h2>
        <p>When your Android/Gradle project its ready, need  register application on CircleCi. </p>
<p>In this tutorial we use Github Repository, CircleCi need a yml file to connect with gradle whole put on  .circleci/:</p>
<pre><code><span class="pun">.</span><span class="str">/circleci/</span><span class="pln">config</span><span class="pun">.</span><span class="pln">yml
</span><span class="typ">Version</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pln">
jobs</span><span class="pun">:</span><span class="pln">
  build</span><span class="pun">:</span><span class="pln">
    working_directory</span><span class="pun">:</span><span class="pln"> </span><span class="pun">~/</span><span class="pln">code
    docker</span><span class="pun">:</span><span class="pln">
      </span><span class="pun">-</span><span class="pln"> image</span><span class="pun">:</span><span class="pln"> circleci</span><span class="pun">/</span><span class="pln">android</span><span class="pun">:</span><span class="pln">api</span><span class="pun">-</span><span class="lit">25</span><span class="pun">-</span><span class="pln">alpha
    environment</span><span class="pun">:</span><span class="pln">
      JVM_OPTS</span><span class="pun">:</span><span class="pln"> </span><span class="pun">-</span><span class="typ">Xmx3200m</span><span class="pln">
    steps</span><span class="pun">:</span><span class="pln">
      </span><span class="pun">-</span><span class="pln"> checkout
      </span><span class="pun">-</span><span class="pln"> restore_cache</span><span class="pun">:</span><span class="pln">
          key</span><span class="pun">:</span><span class="pln"> jars</span><span class="pun">-{{</span><span class="pln"> checksum </span><span class="str">"build.gradle"</span><span class="pln"> </span><span class="pun">}}-{{</span><span class="pln"> checksum  </span><span class="str">"app/build.gradle"</span><span class="pln"> </span><span class="pun">}}</span><span class="pln">
      </span><span class="pun">-</span><span class="pln"> run</span><span class="pun">:</span><span class="pln">
         name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Chmod</span><span class="pln"> permissions </span><span class="com">#if permission for Gradlew Dependencies fail, use this.</span><span class="pln">
         command</span><span class="pun">:</span><span class="pln"> sudo chmod </span><span class="pun">+</span><span class="pln">x </span><span class="pun">./</span><span class="pln">gradlew
      </span><span class="pun">-</span><span class="pln"> run</span><span class="pun">:</span><span class="pln">
          name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Download</span><span class="pln"> </span><span class="typ">Dependencies</span><span class="pln">
          command</span><span class="pun">:</span><span class="pln"> </span><span class="pun">./</span><span class="pln">gradlew androidDependencies
      </span><span class="pun">-</span><span class="pln"> save_cache</span><span class="pun">:</span><span class="pln">
          paths</span><span class="pun">:</span><span class="pln">
            </span><span class="pun">-</span><span class="pln"> </span><span class="pun">~/.</span><span class="pln">gradle
          key</span><span class="pun">:</span><span class="pln"> jars</span><span class="pun">-{{</span><span class="pln"> checksum </span><span class="str">"build.gradle"</span><span class="pln"> </span><span class="pun">}}-{{</span><span class="pln"> checksum  </span><span class="str">"app/build.gradle"</span><span class="pln"> </span><span class="pun">}}</span><span class="pln">
      </span><span class="pun">-</span><span class="pln"> run</span><span class="pun">:</span><span class="pln">
          name</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Run</span><span class="pln"> </span><span class="typ">Tests</span><span class="pln">
          command</span><span class="pun">:</span><span class="pln"> </span><span class="pun">./</span><span class="pln">gradlew lint test
      </span><span class="pun">-</span><span class="pln"> store_artifacts</span><span class="pun">:</span><span class="pln">
          path</span><span class="pun">:</span><span class="pln"> app</span><span class="pun">/</span><span class="pln">build</span><span class="pun">/</span><span class="pln">reports
          destination</span><span class="pun">:</span><span class="pln"> reports
      </span><span class="pun">-</span><span class="pln"> store_test_results</span><span class="pun">:</span><span class="pln">
          path</span><span class="pun">:</span><span class="pln"> app</span><span class="pun">/</span><span class="pln">build</span><span class="pun">/</span><span class="pln">test</span><span class="pun">-</span><span class="pln">results</span></code></pre>
<p>In the configuration of the Github, must be insured that the permissions of writing are enabled for committing immediate in the original branch</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/B.png"></p>
<p>For dynamic, create a test unit that throw error assert on Java Class into test directory:</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/AS.png"></p>
<p>Write a error comment into commit, just only for visualize on Repository and CircleCi</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/AT.png"></p>
<p>Create and Push a new branch with this commit</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/AT_U.png"></p>
<p>When pushed on remote repository, we can view on CircleCi dashboard, on this display show every testing, the status change on <code>real time running</code></p>
<p>When finished, display one of two status failed or success. In this case show an issue</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/AU.png"></p>
<p>Suppose we found the problem, test unit cases had been corroborated, make commit and push it, into <code>CircleCi dashboard</code> show automatically</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/AV.png"></p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/AX.png"></p>
<p>Great CircleCi run all test cases and not find any issue, but found a previous test case failed already corrected it.</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/AY.png"></p>
<p>Summarizing the dashboard of circleCi, shows the following:</p>
<ul>
<li><strong>NOT RUN</strong>: Had a test case don't run, circleCi need permissions for run testing cases.</li>
<li><strong>SUCCESS</strong>: All test cases run successful</li>
<li><strong>FAILED</strong>: Excited test cases don't run well</li>
<li><strong>FIXED</strong>: Previous test case failed already had corrected it</li>
</ul>
<p class="image-container"><img style="width: 624.00px" src="./index_files/AZ.png"></p>
<aside class="special"><p>That's it. More help: <a href="https://circleci.com/docs/2.0/language-android/" target="_blank">CircleCi Android</a></p>
</aside>


      </div></div></google-codelab-step><google-codelab-step label="Intermediate Module" duration="10" step="3"><h2 is-upgraded="" class="step-title">3. Intermediate Module</h2>
        <p>Once test the potential of the tool we are going to see the really useful thing that we can do with <code>Circleci</code>, let's suppose that in our team development, then we want to assure the main branch of our repository always have a stable version, where everything developed has been proved correctly.</p>
<p>On Github go to configure and edit branch permissions, stay blank space in <code>Write access</code> input, and uncheck or revoke all permissions for revoking directly new changes, and enable pull request task for everybody.</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/F.png"></p>
<p>Create a new testing case call <code>serviceModule</code>, in my case use mockito library </p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/D.png"></p>
<p>Make the respective commit</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/E.png"></p>
<p>But tried to send our changes to the remote <code>origin</code>, the repository will reject, because don't have permissions</p>
<p><strong>Now, What we do?</strong></p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/e3PAdnK0lHXvpej20SBd6mu508Q4MR0adaUwG6IMrTlAZnSYHVx9K1JnUekiK534UOGcM_9oqcJcBt1-9xgvS10YBDlwiKiLvf4GEyvNvoa8aRwZls229bo9dbvghoYJqi3I5wrv9pdI6-4=s2048.png"></p>
<p><strong>Simple, create a new branch from our worked branch</strong></p>
<p>If use Android Studio, on <code>Push Commits</code> window, write the name for new branch called <code>BranchServiceTest</code></p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/F(1).png"></p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/G.png"></p>
<p>When pushed the branch, normally work because we only disabled the changes on master branch or directly push</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/H.png"></p>
<p>On the CircleCi dashboard, a new record with <strong>NOT RUN</strong> label and the last commit, CircleCi detected new changes on repository but doesn't had permissions.</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/I.png"></p>
<p>On Github we look the three change had a new <code>test_branch</code> branch, built from AndroidStudio</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/J.png"></p>
<p>Suppose a person in charge of the changes, witch create the new branch need merge on remote origin, the person create a pull request</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/L.png"></p>
<p>On details put a message for the respective merge request and indicate close branch when conflicts are been solved.</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/M.png"></p>
<p>On our project Pull Request display a new request:</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/MN.png"></p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/N.png"></p>
<p>On CircleCi dashboard, added a new record,  when run all test and passed. The record status will change, state: <strong>SUCCESS</strong></p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/P.png"></p>
<p>On the screen display we visualize a counter of executed tests, in our case not detected that the issues of other test cases have been modified, only it will execute our test <code>serviceModule</code> of the class ModuleTest</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/Q.png"></p>
<p>When the administrador had confirm the new implementation to merge. <strong>Assuring a rate of reliability of the code at all time </strong></p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/5LariF_RohYySxbRpuhDdOQJNUyhFnpRY2PtI3AFZKsNkmJdlVQtSgn8brIDLRacsK3h45gV0A1kzaUEeTdFQjAgDDJiYNne93E7ebXxQtWW43iKf71ArdrjDG-uI1BknWhEA1SVw90cqg=s2048.png"></p>
<p>Since we can estimate the tool Circleci, it allows us a great usefulness, for the management and control of the versioning of the cases of tests (proofs) automated, allowing to diversify the tasks between the collaborators of the project where they need test</p>
<aside class="special"><p><strong>Excellent job!! </strong>You are ready for making security rules in repositories.</p>
</aside>


      </div></div></google-codelab-step><google-codelab-step label="Advance Module" duration="5" step="4"><h2 is-upgraded="" class="step-title">4. Advance Module</h2>
        <p>On CircleCi dashboard show the result:</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/mNpuiHnNs6TKyF7UlqELTs4VqLKVeHiJModrguWnf97UtWbyIHPRAurdSFlerAiKjdWLtOIwp3VhqjR3Vu2SNHI0Z6sANlZ3zIKRHHwjReYJfOrA_DIijCUsVSzksTADn63d9ledm2J2Ig=s2048.png"></p>
<p>We can see the record to detail of the testing, step by step display all the commands that we had written on yml file:</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/YKQ8yfwynfBVZARgyDjqlslmWrKw8lNtfoXcURyyf1jEDWDS2YdqVK9mErbhJZ10KJfjLFZe8krU9IhWsIGRmIpUjvhfPy7JkkkkFL32Znupe7M6nu_6rP9Es6Jw2Rk1ZQL6cXYYwgQjWw=s2048.png"></p>
<p>On CircleCi yml file, check <code>Chmod permissions</code>. Because it is very usual that the beginners in this tool have problems due to depending on the this machine(CircleCi Server)  would need permissions</p>
<pre><code><span class="pun">.</span><span class="str">/circleci/</span><span class="pln">config</span><span class="pun">.</span><span class="pln">yml
</span><span class="pun">...</span><span class="pln">
jobs</span><span class="pun">:</span><span class="pln"> </span><span class="pun">...</span><span class="pln">
  build</span><span class="pun">:</span><span class="pln"> </span><span class="pun">...</span><span class="pln">
    steps</span><span class="pun">:</span><span class="pln"> </span><span class="pun">...</span><span class="pln">
      </span><span class="pun">-</span><span class="pln"> run</span><span class="pun">:</span><span class="pln"> </span><span class="pun">...</span><span class="pln">
         command</span><span class="pun">:</span><span class="pln"> sudo chmod </span><span class="pun">+</span><span class="pln">x </span><span class="pun">./</span><span class="pln">gradlew
</span><span class="pun">...</span></code></pre>
<p>CircleCi tools supported the gradle flavors, in this project use <code>SonarQube</code> flavor, for connect it to a base of facts of testing need it on the part of the organization:</p>
<p class="image-container"><img style="width: 624.00px" src="./index_files/R8xPTtvwhV_utgZR9hJQ77lVpvdqag44r_eG6IQNk7GmWz5dBePBqd40zMpDmhbSZUZSLog275VhKfvbQ0HZcMczrtR7b6K0Gp47mKbeBKpNi9__R6rTaFsXUM-8_dUOlRZ9jhu2nrEX6Q=s2048.png"></p>
<aside class="special"><p>Thanks for read this tutorial, and check my <a href="http://portfolio.romellfudi.com/" target="_blank">portfolio</a> and <a href="https://github.com/romellfudi/" target="_blank">github page</a>.</p>
</aside>


      </div></div></google-codelab-step><google-codelab-step label="License" duration="1" step="5"><h2 is-upgraded="" class="step-title">5. License</h2>
        <h2 is-upgraded=""><strong>by Romell Domínguez</strong></h2>
        <p class="image-container"><a href="http://portfolio.romellfudi.com"><img style="width: 287.00px" src="./index_files/icono.png"></a></p>
        <p>Copyright 2018 Romell D.Z.</p>
<p>Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p>
<p>http://www.apache.org/licenses/LICENSE-2.0</p>
<p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,</p>
<p>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</p>
<p>See the License for the specific language governing permissions and limitations under the License.</p>


      </div></div></google-codelab-step></div><div id="controls"><div id="fabs"><a href="#" id="previous-step" title="Previous step">Back</a><div class="spacer"></div><a href="#" id="next-step" title="Next step">Next</a><a href="https://codelabs-preview.appspot.com/" id="done" hidden="" title="Codelab complete">Done</a></div></div></div></google-codelab>

  <script async="">
    document.addEventListener("DOMContentLoaded", function() {
      var pubBtn = document.getElementById('publishButton');
      var pubForm = document.getElementById('publishForm');
      var pubStatus = document.getElementById('publishButtonStatus');

      pubForm.addEventListener('submit', function(e) {
        e.preventDefault();
        pubBtn.disabled = true;
        pubStatus.textContent = '';
        pubStatus.classList.remove('success');
        pubStatus.classList.remove('error');

        var req = new XMLHttpRequest();

        var onError = function() {
          var msg = 'Request failed';
          if (req.statusText) {
            msg += ' with status "' + req.statusText + '"';
          }
          if (req.responseText) {
            msg += ': ' + req.responseText;
          }
          pubStatus.classList.add('error');
          pubStatus.textContent = msg;
          pubBtn.disabled = false;
        };

        req.addEventListener('load', function() {
          if (req.status != 200) {
            onError();
            return;
          }
          pubStatus.textContent = ('Publication request submitted' +
            ' (reload preview to re-publish)');
          pubStatus.classList.add('success');
        });
        req.addEventListener('error', onError);
        req.addEventListener('abort', onError);
        req.open("post", pubForm.action);
        req.send(new FormData(pubForm));
      });
    });
  </script>

  <script src="./index_files/native-shim.js"></script>
  <script src="./index_files/custom-elements.min.js"></script>
  <script src="./index_files/prettify.js"></script>
  <script src="./index_files/codelab-elements.js"></script>


</body></html>